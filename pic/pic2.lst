CCS PCH C Compiler, Version 5.008, 5967               01-abr-17 10:46

               Filename:   C:\Users\Pedro\Google Drive\Pedro\ifpb\software\pic\pic2.lst

               ROM used:   724 bytes (2%)
                           Largest free fragment is 32040
               RAM used:   27 (2%) at main() level
                           27 (2%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   00CC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.1
004A:  GOTO   0054
004E:  BTFSC  F9E.1
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... //A0  1 
.................... //A1  0 
.................... //A2  0 
.................... //A3  0 
.................... #include <pic.h> 
.................... #include <18F252.h> 
.................... //////// Standard Header file for the PIC18F252 device //////////////// 
.................... #device PIC18F252 
....................  
.................... #list 
....................  
.................... //#device ADC=8 
....................  
.................... #FUSES NOWDT                      //Watch Dog Timer 
.................... //#FUSES WDT64                    //Watch Dog Timer uses 1:64 Postscale 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4000000) 
....................  
....................  
.................... int x = 0; 
.................... int a = 0; 
.................... int b = 0; 
.................... int c = 0; 
.................... int d = 0; 
....................  
.................... #INT_TIMER2 
.................... void  TIMER2_isr(void)  
.................... { 
.................... x= x+1; 
0096:  MOVLW  01
0098:  ADDWF  16,F
....................        
....................    d = input(PIN_A0); 
009A:  BSF    F92.0
009C:  CLRF   1A
009E:  BTFSC  F80.0
00A0:  INCF   1A,F
....................    c = input(PIN_A1);  
00A2:  BSF    F92.1
00A4:  CLRF   19
00A6:  BTFSC  F80.1
00A8:  INCF   19,F
....................    b = input(PIN_A2); 
00AA:  BSF    F92.2
00AC:  CLRF   18
00AE:  BTFSC  F80.2
00B0:  INCF   18,F
....................    a = input(PIN_A3); 
00B2:  BSF    F92.3
00B4:  CLRF   17
00B6:  BTFSC  F80.3
00B8:  INCF   17,F
....................       
.................... if(x == 10) {//80ms 
00BA:  MOVF   16,W
00BC:  SUBLW  0A
00BE:  BNZ   00C6
.................... output_toggle(pin_A5); 
00C0:  BCF    F92.5
00C2:  BTG    F89.5
.................... x=0; 
00C4:  CLRF   16
.................... } 
00C6:  BCF    F9E.1
00C8:  GOTO   0054
.................... } 
....................  
.................... void main() 
00CC:  CLRF   FF8
00CE:  BCF    FD0.7
00D0:  BSF    07.7
00D2:  CLRF   16
00D4:  CLRF   17
00D6:  CLRF   18
00D8:  CLRF   19
00DA:  CLRF   1A
00DC:  BSF    FC1.0
00DE:  BSF    FC1.1
00E0:  BSF    FC1.2
00E2:  BCF    FC1.3
.................... { 
....................  
....................    enable_interrupts(INT_TIMER2); 
00E4:  BSF    F9D.1
....................    enable_interrupts(GLOBAL); 
00E6:  MOVLW  C0
00E8:  IORWF  FF2,F
....................    setup_timer_2(T2_DIV_BY_16,249,10);      //800 us overflow, 8,0 ms interrupt 
00EA:  MOVLW  48
00EC:  IORLW  06
00EE:  MOVWF  FCA
00F0:  MOVLW  F9
00F2:  MOVWF  FCB
....................    //setup_adc_ports(ALL_ANALOG); 
....................    //set_adc_channel(0); 
....................    output_high(pin_b0); 
00F4:  BCF    F93.0
00F6:  BSF    F8A.0
....................    output_high(pin_b1); 
00F8:  BCF    F93.1
00FA:  BSF    F8A.1
....................    output_high(pin_b2); 
00FC:  BCF    F93.2
00FE:  BSF    F8A.2
....................    output_high(pin_b3); 
0100:  BCF    F93.3
0102:  BSF    F8A.3
....................    output_high(pin_b4); 
0104:  BCF    F93.4
0106:  BSF    F8A.4
....................    output_high(pin_b5); 
0108:  BCF    F93.5
010A:  BSF    F8A.5
....................    output_high(pin_b6); 
010C:  BCF    F93.6
010E:  BSF    F8A.6
....................    output_high(pin_b7); 
0110:  BCF    F93.7
0112:  BSF    F8A.7
....................     
....................    output_low(pin_c0); 
0114:  BCF    F94.0
0116:  BCF    F8B.0
....................    output_low(pin_c1); 
0118:  BCF    F94.1
011A:  BCF    F8B.1
....................    output_low(pin_c2); 
011C:  BCF    F94.2
011E:  BCF    F8B.2
....................    output_low(pin_c3); 
0120:  BCF    F94.3
0122:  BCF    F8B.3
....................    output_low(pin_c4); 
0124:  BCF    F94.4
0126:  BCF    F8B.4
....................    output_low(pin_c5); 
0128:  BCF    F94.5
012A:  BCF    F8B.5
....................    output_low(pin_c6); 
012C:  BCF    F94.6
012E:  BCF    F8B.6
....................    output_low(pin_c7); 
0130:  BCF    F94.7
0132:  BCF    F8B.7
....................    while(TRUE) 
....................    { 
....................    //d = input(PIN_A0); 
....................    //c = input(PIN_A1);  
....................    //b = input(PIN_A2); 
....................    //a = input(PIN_A3); 
....................       if(a==0 && b==0 && c==0 && d==0){ 
0134:  MOVF   17,F
0136:  BNZ   014A
0138:  MOVF   18,F
013A:  BNZ   014A
013C:  MOVF   19,F
013E:  BNZ   014A
0140:  MOVF   1A,F
0142:  BNZ   014A
....................       output_low(pin_b0); 
0144:  BCF    F93.0
0146:  BCF    F8A.0
....................       } 
0148:  BRA    014E
....................       else 
....................       output_high(pin_b0); 
014A:  BCF    F93.0
014C:  BSF    F8A.0
....................        
....................       if(a==0 && b==0 && c==0 && d==1){ 
014E:  MOVF   17,F
0150:  BNZ   0164
0152:  MOVF   18,F
0154:  BNZ   0164
0156:  MOVF   19,F
0158:  BNZ   0164
015A:  DECFSZ 1A,W
015C:  BRA    0164
....................       output_low(pin_b1); 
015E:  BCF    F93.1
0160:  BCF    F8A.1
....................       } 
0162:  BRA    0168
....................       else 
....................       output_high(pin_b1); 
0164:  BCF    F93.1
0166:  BSF    F8A.1
....................        
....................       if(a==0 && b==0 && c==1 && d==0){ 
0168:  MOVF   17,F
016A:  BNZ   017E
016C:  MOVF   18,F
016E:  BNZ   017E
0170:  DECFSZ 19,W
0172:  BRA    017E
0174:  MOVF   1A,F
0176:  BNZ   017E
....................       output_low(pin_b2); 
0178:  BCF    F93.2
017A:  BCF    F8A.2
....................       } 
017C:  BRA    0182
....................       else 
....................       output_high(pin_b2); 
017E:  BCF    F93.2
0180:  BSF    F8A.2
....................        
....................       if(a==0 && b==0 && c==1 && d==1){ 
0182:  MOVF   17,F
0184:  BNZ   0198
0186:  MOVF   18,F
0188:  BNZ   0198
018A:  DECFSZ 19,W
018C:  BRA    0198
018E:  DECFSZ 1A,W
0190:  BRA    0198
....................       output_low(pin_b3); 
0192:  BCF    F93.3
0194:  BCF    F8A.3
....................       } 
0196:  BRA    019C
....................       else 
....................       output_high(pin_b3); 
0198:  BCF    F93.3
019A:  BSF    F8A.3
....................        
....................       if(a==0 && b==1 && c==0 && d==0){ 
019C:  MOVF   17,F
019E:  BNZ   01B2
01A0:  DECFSZ 18,W
01A2:  BRA    01B2
01A4:  MOVF   19,F
01A6:  BNZ   01B2
01A8:  MOVF   1A,F
01AA:  BNZ   01B2
....................       output_low(pin_b4); 
01AC:  BCF    F93.4
01AE:  BCF    F8A.4
....................       } 
01B0:  BRA    01B6
....................       else 
....................       output_high(pin_b4); 
01B2:  BCF    F93.4
01B4:  BSF    F8A.4
....................        
....................       if(a==0 && b==1 && c==0 && d==1){ 
01B6:  MOVF   17,F
01B8:  BNZ   01CC
01BA:  DECFSZ 18,W
01BC:  BRA    01CC
01BE:  MOVF   19,F
01C0:  BNZ   01CC
01C2:  DECFSZ 1A,W
01C4:  BRA    01CC
....................       output_low(pin_b5); 
01C6:  BCF    F93.5
01C8:  BCF    F8A.5
....................       } 
01CA:  BRA    01D0
....................       else 
....................       output_high(pin_b5); 
01CC:  BCF    F93.5
01CE:  BSF    F8A.5
....................        
....................       if(a==0 && b==1 && c==1 && d==0){ 
01D0:  MOVF   17,F
01D2:  BNZ   01E6
01D4:  DECFSZ 18,W
01D6:  BRA    01E6
01D8:  DECFSZ 19,W
01DA:  BRA    01E6
01DC:  MOVF   1A,F
01DE:  BNZ   01E6
....................       output_low(pin_b6); 
01E0:  BCF    F93.6
01E2:  BCF    F8A.6
....................       } 
01E4:  BRA    01EA
....................       else 
....................       output_high(pin_b6); 
01E6:  BCF    F93.6
01E8:  BSF    F8A.6
....................        
....................       if(a==0 && b==1 && c==1 && d==1){ 
01EA:  MOVF   17,F
01EC:  BNZ   0200
01EE:  DECFSZ 18,W
01F0:  BRA    0200
01F2:  DECFSZ 19,W
01F4:  BRA    0200
01F6:  DECFSZ 1A,W
01F8:  BRA    0200
....................       output_low(pin_b7); 
01FA:  BCF    F93.7
01FC:  BCF    F8A.7
....................       } 
01FE:  BRA    0204
....................       else 
....................       output_high(pin_b7); 
0200:  BCF    F93.7
0202:  BSF    F8A.7
....................        
....................       if(a==1 && b==0 && c==0 && d==0){ 
0204:  DECFSZ 17,W
0206:  BRA    021A
0208:  MOVF   18,F
020A:  BNZ   021A
020C:  MOVF   19,F
020E:  BNZ   021A
0210:  MOVF   1A,F
0212:  BNZ   021A
....................       output_high(pin_c0); 
0214:  BCF    F94.0
0216:  BSF    F8B.0
....................       } 
0218:  BRA    021E
....................       else 
....................       output_low(pin_c0); 
021A:  BCF    F94.0
021C:  BCF    F8B.0
....................        
....................       if(a==1 && b==0 && c==0 && d==1){ 
021E:  DECFSZ 17,W
0220:  BRA    0234
0222:  MOVF   18,F
0224:  BNZ   0234
0226:  MOVF   19,F
0228:  BNZ   0234
022A:  DECFSZ 1A,W
022C:  BRA    0234
....................       output_high(pin_c1); 
022E:  BCF    F94.1
0230:  BSF    F8B.1
....................       } 
0232:  BRA    0238
....................       else 
....................       output_low(pin_c1); 
0234:  BCF    F94.1
0236:  BCF    F8B.1
....................        
....................       if(a==1 && b==0 && c==1 && d==0){ 
0238:  DECFSZ 17,W
023A:  BRA    024E
023C:  MOVF   18,F
023E:  BNZ   024E
0240:  DECFSZ 19,W
0242:  BRA    024E
0244:  MOVF   1A,F
0246:  BNZ   024E
....................       output_high(pin_c2); 
0248:  BCF    F94.2
024A:  BSF    F8B.2
....................       } 
024C:  BRA    0252
....................       else 
....................       output_low(pin_c2); 
024E:  BCF    F94.2
0250:  BCF    F8B.2
....................        
....................       if(a==1 && b==0 && c==1 && d==1){ 
0252:  DECFSZ 17,W
0254:  BRA    0268
0256:  MOVF   18,F
0258:  BNZ   0268
025A:  DECFSZ 19,W
025C:  BRA    0268
025E:  DECFSZ 1A,W
0260:  BRA    0268
....................       output_high(pin_c3); 
0262:  BCF    F94.3
0264:  BSF    F8B.3
....................       } 
0266:  BRA    026C
....................       else 
....................       output_low(pin_c3); 
0268:  BCF    F94.3
026A:  BCF    F8B.3
....................        
....................       if(a==1 && b==1 && c==0 && d==0){ 
026C:  DECFSZ 17,W
026E:  BRA    0282
0270:  DECFSZ 18,W
0272:  BRA    0282
0274:  MOVF   19,F
0276:  BNZ   0282
0278:  MOVF   1A,F
027A:  BNZ   0282
....................       output_high(pin_c4); 
027C:  BCF    F94.4
027E:  BSF    F8B.4
....................       } 
0280:  BRA    0286
....................       else 
....................       output_low(pin_c4); 
0282:  BCF    F94.4
0284:  BCF    F8B.4
....................        
....................       if(a==1 && b==1 && c==0 && d==1){ 
0286:  DECFSZ 17,W
0288:  BRA    029C
028A:  DECFSZ 18,W
028C:  BRA    029C
028E:  MOVF   19,F
0290:  BNZ   029C
0292:  DECFSZ 1A,W
0294:  BRA    029C
....................       output_high(pin_c5); 
0296:  BCF    F94.5
0298:  BSF    F8B.5
....................       } 
029A:  BRA    02A0
....................       else 
....................       output_low(pin_c5); 
029C:  BCF    F94.5
029E:  BCF    F8B.5
....................        
....................       if(a==1 && b==1 && c==1 && d==0){ 
02A0:  DECFSZ 17,W
02A2:  BRA    02B6
02A4:  DECFSZ 18,W
02A6:  BRA    02B6
02A8:  DECFSZ 19,W
02AA:  BRA    02B6
02AC:  MOVF   1A,F
02AE:  BNZ   02B6
....................       output_high(pin_c6); 
02B0:  BCF    F94.6
02B2:  BSF    F8B.6
....................       } 
02B4:  BRA    02BA
....................       else 
....................       output_low(pin_c6); 
02B6:  BCF    F94.6
02B8:  BCF    F8B.6
....................        
....................       if(a==1 && b==1 && c==1 && d==1){ 
02BA:  DECFSZ 17,W
02BC:  BRA    02D0
02BE:  DECFSZ 18,W
02C0:  BRA    02D0
02C2:  DECFSZ 19,W
02C4:  BRA    02D0
02C6:  DECFSZ 1A,W
02C8:  BRA    02D0
....................       output_high(pin_c7); 
02CA:  BCF    F94.7
02CC:  BSF    F8B.7
....................       } 
02CE:  BRA    02D4
....................       else 
....................       output_low(pin_c7); 
02D0:  BCF    F94.7
02D2:  BCF    F8B.7
02D4:  BRA    0134
....................        
....................    } 
....................  
.................... } 
02D6:  SLEEP 

Configuration Fuses:
   Word  1: 2100   XT NOOSCSEN
   Word  2: 0E0C   PUT NOBROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
